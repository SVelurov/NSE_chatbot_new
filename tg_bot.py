#  Bot: NSE_bot
#  User: NSE_KIVI_bot
#  https://habr.com/ru/articles/700484/

#  Bot: NSE_test
#  User: NSE_fortest_bot

from aiogram import Bot, Dispatcher, types
import pandas as pd
from nse_update import login_et


async def mk_bot(token):
    bot = Bot(token)
    dp = Dispatcher(bot)

    # # Authenticate and copy NSE data file from GoogleDrive
    # login_et()

    @dp.message_handler(commands=["start"])
    async def start_message(message: types.Message):

        await bot.send_message(message.chat.id,
                               text='–ë–æ—Ç –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å –∞–∫—Ç–∞ –ù–†–ü –Ω–∞ —Ç–µ–ª–µ–≤–∏–∑–æ—Ä—ã KIVI –∏ JVC')
        await bot.send_message(message.chat.id,
                               text='–í–≤–µ–¥–∏—Ç–µ —Å–µ—Ä–∏–π–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ–≤–∏–∑–æ—Ä–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ KIVI*** –∏–ª–∏ JVC***'
                                    '–∏–ª–∏ –Ω–æ–º–µ—Ä –∞–∫—Ç–∞ –ù–†–ü –≤ —Ñ–æ—Ä–º–∞—Ç–µ NSE***')

    @dp.message_handler(content_types=["text"])
    async def dialog(message: types.Message):
        try:
            process_message = await bot.send_message(message.chat.id, '_–ü—Ä–æ–≤–µ—Ä—è—é..._', parse_mode='Markdown')

            response, status = search_excel(message.text)
            if status == 0:
                btn = types.InlineKeyboardButton("üëé", callback_data=f"dislike{process_message.message_id}")
            else:
                btn = types.InlineKeyboardButton("üëç", callback_data=f"like{process_message.message_id}")

            markup = types.InlineKeyboardMarkup(row_width=1)
            markup.add(btn)

            # Generate and send response
            await bot.edit_message_text(response, message.chat.id, process_message.message_id, reply_markup=markup)

        except Exception:
            await bot.edit_message_text("–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ –±–æ—Ç–∞!", process_message.message_id, message.chat.id)

    # Function to search for the corresponding value in the Excel file
    def search_excel(search_string):
        df = pd.read_excel('NSE.xlsx')
        # The search string is in the first column and the corresponding values are in the second column
        if search_string[:3] == 'JVC' or search_string[:4] == 'KIVI':
            try:
                result = df[df.iloc[:, 0] == search_string].iloc[0, 1]
                nse_num = df[df.iloc[:, 0] == search_string].iloc[0, 2]
                if result == '–£—Ç–≤–µ—Ä–∂–¥–µ–Ω ECS':
                    output = f'–ê–∫—Ç –ù–†–ü {nse_num} –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω'
                    status = 1
                else:
                    output = f'–ê–∫—Ç –ù–†–ü {nse_num} –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω. –°–≤—è–∂–∏—Ç–µ—Å—å —Å –æ—Ñ–∏—Å–æ–º –ö–∏–≤–∏'
                    status = 0
            except IndexError:
                output = f'–¢–∞–∫–æ–π —Å–µ—Ä–∏–π–Ω—ã–π –Ω–æ–º–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –Ω–æ–º–µ—Ä –≤–≤–µ–¥–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ, –≤ —Ñ–æ—Ä–º–∞—Ç–µ KIVI*** ' \
                         f'–∏–ª–∏ JVC***. –ï—Å–ª–∏ –Ω–æ–º–µ—Ä –≤–µ—Ä–Ω—ã–π, —Ç–æ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –æ—Ñ–∏—Å–æ–º –ö–∏–≤–∏'
                status = 0
        # The search string is in the third column and the corresponding values are in the second column
        elif search_string[:3] == 'NSE':
            try:
                result = df[df.iloc[:, 2] == search_string].iloc[0, 1]
                if result == '–£—Ç–≤–µ—Ä–∂–¥–µ–Ω ECS':
                    output = f'–ê–∫—Ç –ù–†–ü {search_string} –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω'
                    status = 1
                else:
                    output = f'–ê–∫—Ç –ù–†–ü {search_string} –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω. –°–≤—è–∂–∏—Ç–µ—Å—å —Å –æ—Ñ–∏—Å–æ–º –ö–∏–≤–∏'
                    status = 0
            except IndexError:
                output = f'–¢–∞–∫–æ–π –Ω–æ–º–µ—Ä –∞–∫—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –Ω–æ–º–µ—Ä –≤–≤–µ–¥–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ, –≤ —Ñ–æ—Ä–º–∞—Ç–µ NSE***. ' \
                         f'–ï—Å–ª–∏ –Ω–æ–º–µ—Ä –≤–µ—Ä–Ω—ã–π, —Ç–æ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –æ—Ñ–∏—Å–æ–º –ö–∏–≤–∏'
                status = 0

        else:
            output = f'–≠—Ç–æ –≤–æ–æ–±—â–µ –Ω–µ –Ω–æ–º–µ—Ä. –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ø—Ä–∞–≤–∏–ª—å–Ω–æ, –≤ —Ñ–æ—Ä–º–∞—Ç–µ KIVI*** –∏–ª–∏ JVC*** –∏–ª–∏ NSE***'
            status = 0
        return output, status

    return bot, dp
